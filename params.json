{"name":"Python-linkedin","tagline":"Python interface to the LinkedIn API","body":"# Python LinkedIn\r\n\r\nPython interface to the LinkedIn API\r\n\r\n[![LinkedIn](http://developer.linkedin.com/sites/default/files/LinkedIn_Logo60px.png)](http://developer.linkedin.com)\r\n\r\nThis library provides a pure python interface for the LinkedIn **Connection**, **Profile**, **Search**, **Status**, **Messaging** and **Invitation** APIs.\r\n\r\n[LinkedIn](http://developer.linkedin.com) provides a service that lets people bring their LinkedIn profiles and networks with them to your site or application via their OAuth based API. This library provides a lightweight interface over a complicated LinkedIn OAuth based API to make it for python programmers easy to use.\r\n\r\n## Installation\r\n\r\nYou can install **python-linkedin** library via pip:\r\n\r\n    $ pip install python-linkedin\r\n\r\n## API Keys\r\n\r\nIn order to use the LinkedIn API, you have an **application key** and **application secret**. For debugging purposes I can provide you those. You can use the following as api key and secret:\r\n\r\n```python\r\nKEY = 'wFNJekVpDCJtRPFX812pQsJee-gt0zO4X5XmG6wcfSOSlLocxodAXNMbl0_hw3Vl'\r\nSECRET = 'daJDa6_8UcnGMw1yuq9TjoO_PMKukXMo8vEMo7Qv5J-G3SPgrAV0FqFCd0TNjQyG'\r\n```\r\n\r\nYou can also get those keys from [here](http://developer.linkedin.com/rest).\r\n\r\n\r\n## Quick Usage From Python Interpreter\r\n\r\nFor testing the library using an interpreter, use the quick helper.\r\n\r\n```python\r\nfrom linkedin import helper\r\napi = helper.quick_api(<Your KEY>, <Your SECRET>)\r\n```\r\n\r\nThis will print a url to the screen. Go into this URL using a browser, after you login, the method will return with an API object you can now use.\r\n\r\n```python\r\napi.get_profile()\r\n```\r\n\r\n## Usage\r\n\r\nYou can use **http://localhost** as the return url. Return URL is a url where LinkedIn redirects the user after he/she grants access to your application.\r\n\r\n```python\r\nfrom linkedin import linkedin\r\n\r\nRETURN_URL = 'http://localhost'\r\napi = linkedin.LinkedIn(<Your KEY>, <Your SECRET>, RETURN_URL)\r\nresult = api.request_token()\r\nif result is True:\r\n    api.get_authorize_url() # open this url on your browser\r\n```\r\n\r\nWhen you grant access to the application, you will be redirected to the return url with the following query strings appended to your RETURN_URL:\r\n\r\n```python\r\n\"http://localhost/?oauth_token=0b27806e-feec-41d4-aac5-619ba43770f1&oauth_verifier=04874\"\r\n```\r\n\r\nThis means that the **auth_verifier** value is 04874. After you get the verifier, you call the **.access_token()** method to get the access token.\r\n\r\n```python\r\nresult = api.access_token(verifier='04874')\r\nif result is True:\r\n    profile = api.get_profile()\r\n    print profile.id\r\n```\r\n\r\nIf you know your public url, call the method above with your public url for more information.\r\n\r\n```python\r\nprofile = api.get_profile(member_id=None, url='http://www.linkedin.com/in/ozgurv')\r\nprint profile.id, profile.first_name, profile.last_name, profile.picture_url\r\n```\r\n\r\nTo fetch your connections, simply call:\r\n\r\n```python\r\nconnections = api.get_connections()\r\n```\r\n\r\nYou can set/clear your status by calling **.set_status()** or **.clear_status()** methods. If you get False as the result, you can get the error by calling **.get_error()** method. Status message should be less than 140 characters. If it is too long, it is shortened. For more information, you can take a look at [http://developer.linkedin.com/docs/DOC-1007](http://developer.linkedin.com/docs/DOC-1007)\r\n\r\n```python\r\nresult = api.set_status('This is my status.')\r\nresult = api.clear_status()\r\n```\r\n\r\nYou can send a message to yourself or your connections' inboxes by simply calling **.send_message()** method. You can send your message at most 10 connections at a time. If you give more than ten IDs, the IDs after 10th one are ignored. For more information, you can take a look at [http://developer.linkedin.com/docs/DOC-1044](http://developer.linkedin.com/docs/DOC-1044)\r\n\r\n```python\r\nresult = api.send_message('This is a subject', 'This is the body')\r\nif result is False:\r\n    print api.get_error()\r\nu'Missing {mailbox-item/recipients/recipient} element'\r\n```\r\n\r\nYou can set the parameter **send_yourself** to True, so you can send the message to yourself.\r\n\r\n```python\r\napi.send_message('This is a subject', 'This is the body', ['ID1', 'ID2', 'ID3'], send_yourself=True)\r\n```\r\n\r\nYou can send an invitation to your friend's email to invite them to join your LinkedIn network by simply calling **.send_invitation()** method.\r\n\r\n```python\r\nresult = api.send_invitation('This is a subject', 'Join to my network', 'Ozgur', 'Vatansever', 'ozgurvt@gmail.com')\r\nprint result\r\nTrue\r\n\r\nresult = api.send_invitation('This is a subject', 'Join to my network', 'Ozgur', 'Vatansever', 'ozgurvt')\r\nif result is False:\r\n    print api.get_error()\r\nu'Invalid argument(s): {emailAddress=invalid_email [ozgurvt]}'\r\n```\r\n\r\n## Throttle Limits\r\n\r\nLinkedIn API keys are throttled by default. You should take a look at [http://developer.linkedin.com/docs/DOC-1112](http://developer.linkedin.com/docs/DOC-1112) to get more information.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}